#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

- name: Set common facts
  tags: [always]
  hosts: all
  connection: ssh
  tasks:
    - name: Set common facts
      set_fact:
        bootstrapServers: "{{ hostvars[inventory_hostname]['bootstrap_brokers_tls'] }}"
        client_worker_heap_size: "8g"
        client_bench_heap_size: "4g"

- name: General setup for all
  tags: [prepare]
  hosts: all
  connection: ssh
  become: true
  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400
    - name: Install packages
      apt: pkg={{ item }} state=present
      with_items:
        - wget
        - tuned
        - openjdk-17-jdk
        - sysstat
        - vim
        - chrony

- name: Setup Benchmark client
  tags: [run]
  hosts: client
  connection: ssh
  become: true
  tasks:
    - file: path=/opt/benchmark state=absent
      tags: [client-code]
    - name: Copy benchmark code
      unarchive:
        src: ../../../package/target/openmessaging-benchmark-0.0.1-SNAPSHOT-bin.tar.gz
        dest: /opt
      tags: [client-code]
    - shell: mv /opt/openmessaging-benchmark-0.0.1-SNAPSHOT /opt/benchmark
      tags: [client-code]
    - shell: tuned-adm profile latency-performance

    - name: Get list of driver config files
      raw: ls -1 /opt/benchmark/driver-msk/deploy/aws-cn/*.yaml
      register: drivers_list
      tags: [client-code]

    - name: Configure Bootstrap Servers
      lineinfile:
        dest: '{{ item }}'
        regexp: '^  bootstrap.servers='
        line: '  bootstrap.servers={{ bootstrapServers }}'
      with_items: '{{ drivers_list.stdout_lines }}'
      tags: [client-code]

    - name: Get list of jms driver config files
      raw: ls -1 /opt/benchmark/driver-jms/kafka*.yaml
      register: jms_drivers_list

    - name: Configure JMS Bootstrap Servers
      lineinfile:
        dest: '{{ item }}'
        regexp: '^  bootstrap.servers='
        line: '  bootstrap.servers={{ bootstrapServers }}'
      with_items: '{{ jms_drivers_list.stdout_lines }}'

    - name: Configure JMS Connection Factory
      ansible.builtin.replace:
        dest: '{{ item }}'
        regexp: 'localhost:9092'
        replace: '{{ bootstrapServers }}'
      with_items: '{{ jms_drivers_list.stdout_lines }}'

    - name: Configure memory
      lineinfile:
        dest: /opt/benchmark/bin/benchmark-worker
        regexp: '^JVM_MEM='
        line: 'JVM_MEM="-Xms{{ client_worker_heap_size }} -Xmx{{ client_worker_heap_size }} -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -XX:+ParallelRefProcEnabled -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=12 -XX:ConcGCThreads=12 -XX:+DisableExplicitGC -XX:-ResizePLAB"'
      tags: [client-code]
    - name: Configure memory
      lineinfile:
        dest: /opt/benchmark/bin/benchmark
        regexp: '^JVM_MEM='
        line: 'JVM_MEM="-Xmx{{ client_bench_heap_size }}"'
      tags: [client-code]
    - template:
        src: "templates/workers.yaml"
        dest: "/opt/benchmark/workers.yaml"
      tags: [client-code]
    - name: Install benchmark systemd service
      template:
        src: "templates/benchmark-worker.service"
        dest: "/etc/systemd/system/benchmark-worker.service"
      tags: [client-code]
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "benchmark-worker"
      tags: [client-code]

    - name: Set up chronyd
      template:
        src: "templates/chrony.conf"
        dest: "/etc/chrony.conf"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "chronyd"
